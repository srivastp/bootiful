plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.gorylenko.gradle-git-properties" version "2.2.4"
	id 'com.adarshr.test-logger' version '2.1.1'
}

// git.properties
gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
	dateFormatTimeZone = "UTC"
	customProperty 'message', 'Hello! git.properties file at build/resources/main/git.properties'
	extProperty = 'gitProps'
	//keys = ['git.branch','git.commit.id','git.commit.time']
	//branch = System.getenv('GIT_BRANCH')
	//dotGitDirectory = "${project.rootDir}\/..\/somefolder\/.git"
	//failOnNoGitDirectory = false
}

// make sure the generateGitProperties task always executes (even when git.properties is not changed)
generateGitProperties.outputs.upToDateWhen { false }

// Manifest.mf
bootJar {
	manifest {
		// Use GString lazy evaluation to delay until git properties are populated
		attributes(
						'Build-Revision': "${-> project.ext.gitProps['git.commit.id.abbrev']}",
						'foo': "bar"
		)
	}
}

// Test Logger Plugin
testlogger {
	theme 'standard'
	showExceptions true
	showStackTraces true
	showFullStackTraces false
	showCauses true
	slowThreshold 2000
	showSummary true
	showSimpleNames false
	showPassed true
	showSkipped true
	showFailed true
	showStandardStreams false
	showPassedStandardStreams true
	showSkippedStandardStreams true
	showFailedStandardStreams true
	logLevel 'lifecycle'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'guru.springframework', name: 'chuck-norris-for-actuator', version: '0.0.2'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
